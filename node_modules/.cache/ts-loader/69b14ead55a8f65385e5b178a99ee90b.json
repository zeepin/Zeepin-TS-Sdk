{"remainingRequest":"/Users/cindice/Documents/github/Zeepin-TS-Sdk/node_modules/thread-loader/dist/cjs.js!/Users/cindice/Documents/github/Zeepin-TS-Sdk/node_modules/babel-loader/lib/index.js!/Users/cindice/Documents/github/Zeepin-TS-Sdk/node_modules/ts-loader/index.js??ref--13-3!/Users/cindice/Documents/github/Zeepin-TS-Sdk/packages/sdk/common/constsUtils.ts","dependencies":[{"path":"/Users/cindice/Documents/github/Zeepin-TS-Sdk/packages/sdk/common/constsUtils.ts","mtime":1555653862000},{"path":"/Users/cindice/Documents/github/Zeepin-TS-Sdk/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cindice/Documents/github/Zeepin-TS-Sdk/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cindice/Documents/github/Zeepin-TS-Sdk/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/cindice/Documents/github/Zeepin-TS-Sdk/node_modules/ts-loader/index.js","mtime":1545640398000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport opcode from \"./opCode\";\nimport { BigInt } from \"./classesUtils\";\nimport { num2hexstring } from \"./functionsUtils\";\nexport var pushBool = function pushBool(param) {\n  var result = '';\n\n  if (param) {\n    result += num2hexstring(opcode.PUSHT);\n  } else {\n    result += num2hexstring(opcode.PUSHF);\n  }\n\n  return result;\n};\nexport var pushInt = function pushInt(param) {\n  var result = '';\n\n  if (param === -1) {\n    result = num2hexstring(opcode.PUSHM1);\n  } else if (param === 0) {\n    result = num2hexstring(opcode.PUSH0);\n  } else if (param > 0 && param < 16) {\n    var num = opcode.PUSH1 - 1 + param;\n    result = num2hexstring(num);\n  } else {\n    var biHex = new BigInt(param.toString()).toHexstr();\n    result = pushHexString(biHex);\n  }\n\n  return result;\n};\nexport var pushBigNum = function pushBigNum(param) {\n  var result = '';\n\n  if (param.isEqualTo(-1)) {\n    result = num2hexstring(opcode.PUSHM1);\n  } else if (param.isEqualTo(0)) {\n    result = num2hexstring(opcode.PUSH0);\n  } else if (param.isGreaterThan(0) && param.isLessThan(16)) {\n    var num = opcode.PUSH1 - 1 + param.toNumber();\n    result = num2hexstring(num);\n  } else {\n    var biHex = new BigInt(param.toString()).toHexstr();\n    result = pushHexString(biHex);\n  }\n\n  return result;\n};\nexport var pushHexString = function pushHexString(param) {\n  var result = '';\n  var len = param.length / 2;\n\n  if (len <= opcode.PUSHBYTES75) {\n    result += num2hexstring(len);\n  } else if (len < 0x100) {\n    result += num2hexstring(opcode.PUSHDATA1);\n    result += num2hexstring(len);\n  } else if (len < 0x10000) {\n    result += num2hexstring(opcode.PUSHDATA2);\n    result += num2hexstring(len, 2, true);\n  } else {\n    result += num2hexstring(opcode.PUSHDATA4);\n    result += num2hexstring(len, 4, true);\n  }\n\n  result += param;\n  return result;\n};",null]}