{"remainingRequest":"/Users/cindice/Documents/github/Zeepin-TS-Sdk/node_modules/thread-loader/dist/cjs.js!/Users/cindice/Documents/github/Zeepin-TS-Sdk/node_modules/babel-loader/lib/index.js!/Users/cindice/Documents/github/Zeepin-TS-Sdk/node_modules/ts-loader/index.js??ref--13-3!/Users/cindice/Documents/github/Zeepin-TS-Sdk/packages/sdk/wallet/wallet.ts","dependencies":[{"path":"/Users/cindice/Documents/github/Zeepin-TS-Sdk/packages/sdk/wallet/wallet.ts","mtime":1556783635000},{"path":"/Users/cindice/Documents/github/Zeepin-TS-Sdk/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cindice/Documents/github/Zeepin-TS-Sdk/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cindice/Documents/github/Zeepin-TS-Sdk/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/cindice/Documents/github/Zeepin-TS-Sdk/node_modules/ts-loader/index.js","mtime":1545640398000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.map\";\nimport _JSON$stringify from \"/Users/cindice/Documents/github/Zeepin-TS-Sdk/node_modules/@babel/runtime-corejs2/core-js/json/stringify\";\nimport _getIterator from \"/Users/cindice/Documents/github/Zeepin-TS-Sdk/node_modules/@babel/runtime-corejs2/core-js/get-iterator\";\nimport _classCallCheck from \"/Users/cindice/Documents/github/Zeepin-TS-Sdk/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/cindice/Documents/github/Zeepin-TS-Sdk/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\nimport { DEFAULT_SCRYPT } from \"../common/consts\";\nimport { Account } from \"./account\";\nexport var Wallet =\n/*#__PURE__*/\nfunction () {\n  function Wallet() {\n    _classCallCheck(this, Wallet);\n\n    this.name = 'com.github.zeepin';\n    this.version = '1.0';\n    this.scrypt = {\n      dkLen: DEFAULT_SCRYPT.size,\n      n: DEFAULT_SCRYPT.cost,\n      p: DEFAULT_SCRYPT.parallel,\n      r: DEFAULT_SCRYPT.blockSize\n    };\n  }\n  /**\n   * create wallet\n   */\n\n\n  _createClass(Wallet, [{\n    key: \"addAccount\",\n    value: function addAccount(account) {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = _getIterator(this.accounts), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var ac = _step.value;\n\n          if (ac.address.toBase58() === account.address.toBase58()) {\n            return;\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      this.accounts.push(account);\n    }\n  }, {\n    key: \"setDefaultAccount\",\n    value: function setDefaultAccount(address) {\n      this.defaultAccountAddress = address;\n    }\n    /**\n     * keystore\n     */\n\n  }, {\n    key: \"toJson\",\n    value: function toJson() {\n      return _JSON$stringify(this.toJsonObj());\n    }\n  }, {\n    key: \"toJsonObj\",\n    value: function toJsonObj() {\n      var obj = {\n        accounts: this.accounts.map(function (a) {\n          return a.toJsonObj();\n        }),\n        defaultAccountAddress: this.defaultAccountAddress,\n        name: this.name,\n        scrypt: this.scrypt,\n        version: this.version\n      };\n      return obj;\n    }\n  }], [{\n    key: \"createWallet\",\n    value: function createWallet(password, name) {\n      var wallet = new Wallet();\n      wallet.accounts = [];\n      wallet.accounts.push(Account.createAccount(password, name));\n      wallet.defaultAccountAddress = wallet.accounts[0].address.toBase58();\n      return wallet;\n    }\n    /**\n     * import wallet\n     */\n\n  }, {\n    key: \"importWalletByPrivateKey\",\n    value: function importWalletByPrivateKey(password, privateKey, name) {\n      var wallet = new Wallet();\n      wallet.accounts = [];\n      wallet.accounts.push(Account.importAccountByPrivateKey(password, privateKey, name));\n      wallet.defaultAccountAddress = wallet.accounts[0].address.toBase58();\n      return wallet;\n    }\n  }, {\n    key: \"importWalletByKeystore\",\n    value: function importWalletByKeystore(password, keystore) {\n      var wallet = new Wallet(); // @ts-ignore\n\n      wallet.defaultAccountAddress = keystore.accounts[0].address;\n      wallet.accounts = [];\n      wallet.accounts.push(Account.importAccountByKeystore(password, keystore)); // @ts-ignore\n\n      wallet.scrypt.n = keystore.scrypt.n;\n      return wallet;\n    }\n  }, {\n    key: \"modifyPassword\",\n    value: function modifyPassword(oldPassword, newPassword, keystore) {\n      var wallet = new Wallet(); // @ts-ignore\n\n      wallet.defaultAccountAddress = keystore.accounts[0].address;\n      wallet.accounts = [];\n      wallet.accounts.push(Account.modifyPassword(oldPassword, newPassword, keystore));\n      return wallet;\n    }\n  }]);\n\n  return Wallet;\n}();",null]}