{"remainingRequest":"/Users/cindice/Documents/github/Zeepin-TS-Sdk/node_modules/thread-loader/dist/cjs.js!/Users/cindice/Documents/github/Zeepin-TS-Sdk/node_modules/babel-loader/lib/index.js!/Users/cindice/Documents/github/Zeepin-TS-Sdk/node_modules/ts-loader/index.js??ref--13-3!/Users/cindice/Documents/github/Zeepin-TS-Sdk/packages/sdk/wallet/address.ts","dependencies":[{"path":"/Users/cindice/Documents/github/Zeepin-TS-Sdk/packages/sdk/wallet/address.ts","mtime":1555653862000},{"path":"/Users/cindice/Documents/github/Zeepin-TS-Sdk/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cindice/Documents/github/Zeepin-TS-Sdk/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cindice/Documents/github/Zeepin-TS-Sdk/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/cindice/Documents/github/Zeepin-TS-Sdk/node_modules/ts-loader/index.js","mtime":1545640398000}],"contextDependencies":[],"result":["import _classCallCheck from \"/Users/cindice/Documents/github/Zeepin-TS-Sdk/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/cindice/Documents/github/Zeepin-TS-Sdk/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\nimport * as base58 from 'base-58';\nimport { ADDR_VERSION } from '../common/consts';\nimport { ERROR_CODE } from '../common/error';\nimport { sha256, ab2hexstring, hash160, reverseHex } from '../common/functionsUtils';\nimport { programFromPubKey } from \"../crypto/programs\";\nexport var Address =\n/*#__PURE__*/\nfunction () {\n  function Address(value) {\n    _classCallCheck(this, Address);\n\n    if (value.length === 40 || value.length === 34) {\n      this.value = value;\n    } else {\n      throw ERROR_CODE.INVALID_PARAMS;\n    }\n  }\n  /**\n   * Generate address from public key.\n   *\n   * @param publicKey Public key to use\n   */\n\n\n  _createClass(Address, [{\n    key: \"toBase58\",\n\n    /**\n     * Gets Base58 encoded representation of the address.\n     */\n    value: function toBase58() {\n      if (this.value.length === 34) {\n        return this.value;\n      } else {\n        return hexToBase58(this.value);\n      }\n    }\n    /**\n     * Gets Hex encoded representation of the address.\n     */\n\n  }, {\n    key: \"toHexString\",\n    value: function toHexString() {\n      if (this.value.length === 40) {\n        return reverseHex(this.value);\n      } else {\n        return reverseHex(base58ToHex(this.value));\n      }\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize() {\n      if (this.value.length === 40) {\n        return this.value;\n      } else {\n        return base58ToHex(this.value);\n      }\n    }\n  }], [{\n    key: \"fromPubKey\",\n    value: function fromPubKey(publicKey) {\n      var program = programFromPubKey(publicKey);\n      var programHash = hash160(program);\n      return new Address(programHash);\n    }\n  }]);\n\n  return Address;\n}();\n\nfunction hexToBase58(hexEncoded) {\n  var data = ADDR_VERSION + hexEncoded;\n  var hash = sha256(data);\n  var checksum = hash.slice(0, 8);\n  var datas = data + checksum;\n  return base58.encode(new Buffer(datas, 'hex'));\n}\n\nfunction base58ToHex(base58Encoded) {\n  var decoded = base58.decode(base58Encoded);\n  var hexEncoded = ab2hexstring(decoded).substr(2, 40);\n\n  if (base58Encoded !== hexToBase58(hexEncoded)) {\n    throw new Error('[addressToU160] decode encoded verify failed');\n  }\n\n  return hexEncoded;\n}",null]}