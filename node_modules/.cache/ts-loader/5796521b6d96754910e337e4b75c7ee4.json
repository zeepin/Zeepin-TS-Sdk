{"remainingRequest":"/Users/cindice/Documents/github/Zeepin-TS-Sdk/node_modules/babel-loader/lib/index.js!/Users/cindice/Documents/github/Zeepin-TS-Sdk/node_modules/ts-loader/index.js??ref--13-2!/Users/cindice/Documents/github/Zeepin-TS-Sdk/packages/sdk/common/constsUtils.ts","dependencies":[{"path":"/Users/cindice/Documents/github/Zeepin-TS-Sdk/packages/sdk/common/constsUtils.ts","mtime":1555653862000},{"path":"/Users/cindice/Documents/github/Zeepin-TS-Sdk/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cindice/Documents/github/Zeepin-TS-Sdk/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/cindice/Documents/github/Zeepin-TS-Sdk/node_modules/ts-loader/index.js","mtime":1545640398000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport opcode from \"./opCode\";\nimport { BigInt } from \"./classesUtils\";\nimport { num2hexstring } from \"./functionsUtils\";\nexport var pushBool = function pushBool(param) {\n  var result = '';\n\n  if (param) {\n    result += num2hexstring(opcode.PUSHT);\n  } else {\n    result += num2hexstring(opcode.PUSHF);\n  }\n\n  return result;\n};\nexport var pushInt = function pushInt(param) {\n  var result = '';\n\n  if (param === -1) {\n    result = num2hexstring(opcode.PUSHM1);\n  } else if (param === 0) {\n    result = num2hexstring(opcode.PUSH0);\n  } else if (param > 0 && param < 16) {\n    var num = opcode.PUSH1 - 1 + param;\n    result = num2hexstring(num);\n  } else {\n    var biHex = new BigInt(param.toString()).toHexstr();\n    result = pushHexString(biHex);\n  }\n\n  return result;\n};\nexport var pushBigNum = function pushBigNum(param) {\n  var result = '';\n\n  if (param.isEqualTo(-1)) {\n    result = num2hexstring(opcode.PUSHM1);\n  } else if (param.isEqualTo(0)) {\n    result = num2hexstring(opcode.PUSH0);\n  } else if (param.isGreaterThan(0) && param.isLessThan(16)) {\n    var num = opcode.PUSH1 - 1 + param.toNumber();\n    result = num2hexstring(num);\n  } else {\n    var biHex = new BigInt(param.toString()).toHexstr();\n    result = pushHexString(biHex);\n  }\n\n  return result;\n};\nexport var pushHexString = function pushHexString(param) {\n  var result = '';\n  var len = param.length / 2;\n\n  if (len <= opcode.PUSHBYTES75) {\n    result += num2hexstring(len);\n  } else if (len < 0x100) {\n    result += num2hexstring(opcode.PUSHDATA1);\n    result += num2hexstring(len);\n  } else if (len < 0x10000) {\n    result += num2hexstring(opcode.PUSHDATA2);\n    result += num2hexstring(len, 2, true);\n  } else {\n    result += num2hexstring(opcode.PUSHDATA4);\n    result += num2hexstring(len, 4, true);\n  }\n\n  result += param;\n  return result;\n};",{"version":3,"sources":["/Users/cindice/Documents/github/Zeepin-TS-Sdk/packages/sdk/common/constsUtils.ts"],"names":[],"mappings":"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","sourcesContent":["import { BigNumber } from 'bignumber.js';\nimport opcode from \"./opCode\";\nimport { BigInt } from \"./classesUtils\";\nimport { num2hexstring } from \"./functionsUtils\";\n\nexport const pushBool = (param: boolean) => {\n    let result = '';\n    if (param) {\n        result += num2hexstring(opcode.PUSHT);\n    } else {\n        result += num2hexstring(opcode.PUSHF);\n    }\n    return result;\n};\n\nexport const pushInt = (param: number) => {\n    let result = '';\n    if (param === -1) {\n        result = num2hexstring(opcode.PUSHM1);\n    } else if (param === 0) {\n        result = num2hexstring(opcode.PUSH0);\n    } else if (param > 0 && param < 16) {\n        const num = opcode.PUSH1 - 1 + param;\n        result = num2hexstring(num);\n    } else {\n        const biHex = new BigInt(param.toString()).toHexstr();\n        result = pushHexString(biHex);\n    }\n\n    return result;\n};\n\nexport const pushBigNum = (param: BigNumber) => {\n    let result = '';\n    if (param.isEqualTo(-1)) {\n        result = num2hexstring(opcode.PUSHM1);\n    } else if (param.isEqualTo(0)) {\n        result = num2hexstring(opcode.PUSH0);\n    } else if (param.isGreaterThan(0) && param.isLessThan(16)) {\n        const num = opcode.PUSH1 - 1 + param.toNumber();\n        result = num2hexstring(num);\n    } else {\n        const biHex = new BigInt(param.toString()).toHexstr();\n        result = pushHexString(biHex);\n    }\n    return result;\n};\n\nexport const pushHexString = (param: string) => {\n    let result = '';\n    const len = param.length / 2;\n    if (len <= opcode.PUSHBYTES75) {\n        result += num2hexstring(len);\n    } else if (len < 0x100) {\n        result += num2hexstring(opcode.PUSHDATA1);\n        result += num2hexstring(len);\n    } else if (len < 0x10000) {\n        result += num2hexstring(opcode.PUSHDATA2);\n        result += num2hexstring(len, 2, true);\n    } else {\n        result += num2hexstring(opcode.PUSHDATA4);\n        result += num2hexstring(len, 4, true);\n    }\n    result += param;\n    return result;\n};\n"],"sourceRoot":""}]}